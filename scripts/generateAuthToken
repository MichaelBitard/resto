#!/bin/bash

USER_ID=100
DAYS=100
ABS_ROOT_PATH=$(cd -P -- "$(dirname -- "$0")" && printf '%s\n' "$(pwd -P)")
ENV_FILE=${ABS_ROOT_PATH}/../config.env

#
# Convert relative path to absolute
#
function absolutePath {
    local target="$1"

    if [ "$target" == "." ]; then
        echo "$(pwd)"
    elif [ "$target" == ".." ]; then
        echo "$(dirname "$(pwd)")"
    else
        echo "$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
    fi
}

#
# Help function
#
function showUsage {
    echo -e ""
    echo -e "Generate a resto JSON Web Token (aka rJWT) authentication token for user"
    echo -e ""
    echo -e "   Usage $0 [options]"
    echo -e ""
    echo -e "   Options:"
    echo -e ""
    echo -e "      -e | --envfile Environnement file (default is ${GREEN}${ENV_FILE}${NC})"
    echo -e "      -i | --userid User identifier (default is ${GREEN}${USER_ID}${NC})"
    echo -e "      -d | --duration Duration of token in days (default ${GREEN}${DAYS}${NC})"
    echo -e "      -h | --help show this help"
    echo -e ""
    echo -e "      !!! This script requires docker !!!"
    echo -e ""
}

while (( "$#" ));
do
	case "$1" in
        -e|--envfile)
            if [[ "$2" == "" || ${2:0:1} == "-" ]]; then
                showUsage
                echo -e "${RED}[ERROR] Missing config file name${NC}"
                echo -e ""
                exit 1
            fi
            ENV_FILE="$2"
            shift 2 # past argument
            ;;
        -i|--userid)
            USER_ID="$2"
            if [[ "$2" == "" || ${2:0:1} == "-" ]]; then
                showUsage
                echo -e "${RED}[ERROR] Missing user id${NC}"
                echo -e ""
                exit 1
            fi
            shift 2 # past argument
            ;;
        -d|--days)
            DAYS="$2"
            if [[ "$2" == "" || ${2:0:1} == "-" ]]; then
                showUsage
                echo -e "${RED}[ERROR] Missing days${NC}"
                echo -e ""
                exit 1
            fi
            shift 2 # past argument
            ;;
        -h|--help)
            showUsage
            shift # past argument
            exit 0
            ;;
        --) # end argument parsing
            shift
            break
            ;;
        -*|--*=) # unsupported flags
            showUsage
            echo -e "${RED}[ERROR] Unsupported flag $1${NC}"
            echo -e ""
            exit 1
            ;;
	esac
done

if ! command -v docker &> /dev/null
then
    echo ""
    echo -e "${RED}[ERROR]${NC} The required \"docker\" command was not found. See https://docs.docker.com/get-docker/"
    echo ""
    exit 1
fi

if [[ ! -f $(absolutePath ${ENV_FILE}) ]]; then
    echo ""
    echo -e "${RED}[ERROR]${NC} The file ${ENV_FILE} does not exists"
    echo ""
    exit 1
fi
docker run -it --rm -v ${ABS_ROOT_PATH}/php/generateAuthToken.php:/app/generateAuthToken.php -v $(absolutePath ${ENV_FILE}):/app/config.env php:7.2-alpine /app/generateAuthToken.php -e /app/config.env -i ${USER_ID} -d ${DAYS}
