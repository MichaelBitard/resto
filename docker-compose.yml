version: '2.1'
volumes:
  database_data:
    driver: local
  static_content:
    driver: local
networks:
  default:
    driver: bridge
  external:
    external:
      name: rnet 
services:
  resto:
    image: jjrom/resto:5.0
    restart: always
    build:
      context: ./
      dockerfile: ./build/resto/Dockerfile
    depends_on:
      - restodb
    networks:
      - default
      - external
    ports:
      - ${RESTO_EXPOSED_PORT:-5252}:80
    env_file:
      - ${ENV_FILE:-config.env}
    environment: 
      ### Set to 0 in production environment to activate opcache
      - RESTO_DEBUG_MODE=0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1"]
      interval: 1m
      timeout: 5s
    volumes:
      - ${RESTO_STATIC_CONTENT:-static_content}:/var/www/static
  restodb:
    image: jjrom/resto-database:5.0
    restart: always
    build:
      context: ./
      dockerfile: ./build/resto-database/Dockerfile
    command: docker-entrypoint.sh -c config_file=/etc/postgresql.conf
    networks:
      - default
      - external
    env_file:
      - ${ENV_FILE:-config.env}
    environment:
      - POSTGRES_PASSWORD=${DATABASE_USER_PASSWORD:-resto}
      - POSTGRES_USER=${DATABASE_USER_NAME:-resto}
      - POSTGRES_DB=${DATABASE_NAME:-resto}
    ports:
      - ${DATABASE_EXPOSED_PORT:-5253}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER_NAME:-resto}"]
      interval: 1m
      timeout: 5s
    volumes:
      - ${POSTGRES_DATA:-database_data}:/var/lib/postgresql/data
